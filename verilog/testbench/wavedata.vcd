$date
	Sun Jan 28 08:42:23 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testcache $end
$var wire 1 ! m_write_done $end
$var wire 1 " m_read_done $end
$var wire 128 # c_m_write_data_o [127:0] $end
$var wire 1 $ c_m_wr_o $end
$var wire 1 % c_m_read_o $end
$var wire 128 & c_m_read_data_i [127:0] $end
$var wire 1 ' c_m_busywait_i $end
$var wire 28 ( c_m_address_o [27:0] $end
$var wire 32 ) c_data_o [31:0] $end
$var wire 1 * c_busywait_o $end
$var parameter 32 + address_size $end
$var parameter 32 , c_block_size $end
$var parameter 32 - c_line_size $end
$var reg 32 . address [31:0] $end
$var reg 1 / c_read_i $end
$var reg 1 0 c_wr_i $end
$var reg 32 1 c_write_data_i [31:0] $end
$var reg 1 2 clk $end
$var reg 1 3 reset $end
$scope module data_memory $end
$var wire 1 2 m_clk_i $end
$var wire 1 3 m_reset_i $end
$var wire 1 $ m_wr_i $end
$var wire 128 4 m_wr_data_i [127:0] $end
$var wire 1 % m_read_i $end
$var wire 28 5 m_addr_i [27:0] $end
$var parameter 3 6 IDLE $end
$var parameter 3 7 MEM_READ $end
$var parameter 3 8 MEM_READ_DONE $end
$var parameter 3 9 MEM_WRITE $end
$var parameter 3 : MEM_WRITE_DONE $end
$var parameter 32 ; address_size $end
$var parameter 32 < c_block_size $end
$var parameter 32 = c_line_size $end
$var parameter 32 > mem_line_size $end
$var reg 2 ? byte_read_count [1:0] $end
$var reg 128 @ data_to_be_write [127:0] $end
$var reg 1 ' m_busywait_o $end
$var reg 3 A m_n_state [2:0] $end
$var reg 128 B m_read_data_o [127:0] $end
$var reg 1 " m_read_done $end
$var reg 3 C m_state [2:0] $end
$var reg 1 ! m_write_done $end
$var reg 32 D tmp_read_data [31:0] $end
$upscope $end
$scope module mycache $end
$var wire 32 E address_i [31:0] $end
$var wire 1 ' c_m_busywait_i $end
$var wire 128 F c_m_read_data_i [127:0] $end
$var wire 1 / c_read_i $end
$var wire 1 0 c_wr_i $end
$var wire 32 G c_write_data_i [31:0] $end
$var wire 1 2 clk_i $end
$var wire 1 H is_dirty $end
$var wire 1 " m_read_done $end
$var wire 1 ! m_write_done $end
$var wire 1 3 reset_i $end
$var wire 24 I tag_addr [23:0] $end
$var wire 2 J offset_addr [1:0] $end
$var wire 4 K index_addr [3:0] $end
$var wire 28 L c_m_address_wr [27:0] $end
$var wire 28 M c_m_address_read [27:0] $end
$var parameter 3 N IDLE $end
$var parameter 3 O MEM_READ $end
$var parameter 3 P MEM_READ_DONE $end
$var parameter 3 Q MEM_WRITE $end
$var parameter 3 R MEM_WRITE_DONE $end
$var parameter 32 S address_size $end
$var parameter 32 T c_assiotivity $end
$var parameter 32 U c_block_size $end
$var parameter 32 V c_index $end
$var parameter 32 W c_line_size $end
$var parameter 35 X c_tag_size $end
$var reg 1 Y c_allow_wr $end
$var reg 1 * c_busywait_o $end
$var reg 32 Z c_data_o [31:0] $end
$var reg 1 [ c_hit $end
$var reg 2 \ c_hit_set_place [1:0] $end
$var reg 28 ] c_m_address_o [27:0] $end
$var reg 1 % c_m_read_o $end
$var reg 1 $ c_m_wr_o $end
$var reg 128 ^ c_m_write_data_o [127:0] $end
$var reg 3 _ c_n_state [2:0] $end
$var reg 3 ` c_state [2:0] $end
$var reg 1 a c_update_en $end
$var reg 128 b c_write_data_pre [127:0] $end
$var reg 128 c c_write_data_pre_all_ [127:0] $end
$var integer 32 d i [31:0] $end
$var integer 32 e j [31:0] $end
$var integer 32 f less_used_assiotivity [31:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 g \c_valid_bit[0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 h \c_valid_bit[1] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 24 i \c_tag[0] [23:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 24 j \c_tag[1] [23:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 128 k \c_word[0] [127:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 3 l \c_usability_bit[1] [2:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 m \c_dirty_bit[1] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 n \c_valid_bit[4] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 o \c_valid_bit[5] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 24 p \c_tag[4] [23:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 24 q \c_tag[5] [23:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 128 r \c_word[4] [127:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 3 s \c_usability_bit[5] [2:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 t \c_dirty_bit[5] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 u \valid_bit_frm_c[0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 v \valid_bit_frm_c[1] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 w \valid_bit_frm_c[2] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 x \valid_bit_frm_c[3] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 24 y \tag_frm_c[0] [23:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 24 z \tag_frm_c[1] [23:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 24 { \tag_frm_c[2] [23:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 24 | \tag_frm_c[3] [23:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 } \hit_frm_c[0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 ~ \hit_frm_c[1] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 !" \hit_frm_c[2] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 "" \hit_frm_c[3] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 #" \hit_frm_c_AND_valid_bit_frm_c[0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 $" \hit_frm_c_AND_valid_bit_frm_c[1] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 %" \hit_frm_c_AND_valid_bit_frm_c[2] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 &" \hit_frm_c_AND_valid_bit_frm_c[3] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 32 '" \data_frm_c[0] [31:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 32 (" \data_frm_c[1] [31:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 32 )" \data_frm_c[2] [31:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 32 *" \data_frm_c[3] [31:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 3 +" \usability_bit_frm_c[0] [2:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 3 ," \usability_bit_frm_c[1] [2:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 3 -" \usability_bit_frm_c[2] [2:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 3 ." \usability_bit_frm_c[3] [2:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 /" \dirty_bit_frm_c[0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 0" \dirty_bit_frm_c[1] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 1" \dirty_bit_frm_c[2] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module mycache $end
$var reg 1 2" \dirty_bit_frm_c[3] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module data_memory $end
$var reg 32 3" \memory[0] [31:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module data_memory $end
$var reg 32 4" \memory[1] [31:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module data_memory $end
$var reg 32 5" \memory[2] [31:0] $end
$upscope $end
$upscope $end
$scope module testcache $end
$scope module data_memory $end
$var reg 32 6" \memory[3] [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11000 X
b100000 W
b100 V
b10 U
b10 T
b100000 S
b100 R
b10 Q
b11 P
b1 O
b0 N
b100000 >
b100000 =
b10 <
b100000 ;
b100 :
b10 9
b11 8
b1 7
b0 6
b100000 -
b10 ,
b100000 +
$end
#0
$dumpvars
b1000100010001000100000001 6"
b1000100010001 5"
b10000 4"
b10000000100010000000000000001 3"
x2"
x1"
x0"
x/"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
bx |
bx {
bx z
bx y
xx
xw
xv
xu
xt
bx s
bx r
bx q
bx p
xo
xn
xm
bx l
bx k
bx j
bx i
xh
xg
bx f
bx e
bx d
bx c
bx b
xa
bx `
bx _
bx ^
bx ]
bx \
x[
bx Z
xY
bx M
b0xxxxxxxxxxxxxxxxxxxxxxxx L
bx K
bx J
bx I
xH
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx 5
bx 4
x3
12
bx 1
x0
x/
bx .
x*
bx )
bx (
x'
bx &
x%
x$
bx #
x"
x!
$end
#1000
0Y
0$
0%
0*
b0 _
b0 `
0"
0!
0'
bx ."
bx *"
x&"
1""
x2"
bx |
xx
bx -"
bx )"
x%"
1!"
x1"
bx {
xw
bx ,"
bx ("
x$"
1~
x0"
bx z
xv
bx +"
bx '"
x#"
1}
x/"
bx y
xu
b0 \
0[
b0 D
b0 A
b0 C
b0 c
b0 s
0t
b0 q
0o
b0 p
b0 r
0n
b0 l
0m
b0 j
0h
b0 i
b0 k
0g
b100 e
b100 d
13
#2000
03
#5000
02
#7000
b1 _
0a
b0 L
0H
b0 f
b0 (
b0 5
b0 ]
bx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 b
b0 ."
b0 *"
0&"
1""
02"
b0 |
0x
b0 -"
b0 )"
0%"
1!"
01"
b0 {
0w
b0 ,"
b0 ("
0$"
1~
00"
b0 z
0v
b0 +"
b0 '"
0#"
1}
0/"
b0 y
0u
b100 d
b0 M
b11 J
b0 K
b0 I
00
1/
b1110 .
b1110 E
#10000
b1 A
1%
1*
b1 `
b0 ?
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx B
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx F
12
#15000
02
#20000
1'
b1 C
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx B
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx F
12
#21000
b10000000100010000000000000001 D
#25000
02
#30000
b1 ?
b100000001000100000000000000010000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
b100000001000100000000000000010000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx B
b100000001000100000000000000010000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx F
12
#31000
b10000 D
#35000
02
#40000
b10 ?
b10000000100000001000100000000000000010000000000000000000000000000000000000000000000000000000000000000 &
b10000000100000001000100000000000000010000000000000000000000000000000000000000000000000000000000000000 B
b10000000100000001000100000000000000010000000000000000000000000000000000000000000000000000000000000000 F
12
#41000
b1000100010001 D
#45000
02
#50000
b11 A
b11 ?
b1000100010001000000000000000000000000000100000001000000010001000000000000000100000000000000000000000000000000 &
b1000100010001000000000000000000000000000100000001000000010001000000000000000100000000000000000000000000000000 B
b1000100010001000000000000000000000000000100000001000000010001000000000000000100000000000000000000000000000000 F
12
#51000
b1000100010001000100000001 D
#55000
02
#60000
1Y
0%
b11 _
b0 A
1"
0'
b11 C
b0 ?
b1000100010001000100000001000000000000000000010001000100010000000000000000000000000001000000010000000100010000000000000001 &
b1000100010001000100000001000000000000000000010001000100010000000000000000000000000001000000010000000100010000000000000001 B
b1000100010001000100000001000000000000000000010001000100010000000000000000000000000001000000010000000100010000000000000001 F
12
#65000
02
#70000
0Y
0*
b0 _
0"
b11 `
b0 C
b1 f
b0 ."
b0 *"
0&"
1""
02"
b0 |
0x
b0 -"
b0 )"
0%"
1!"
01"
b0 {
0w
b0 ,"
b0 ("
0$"
1~
00"
b0 z
0v
b1000100010001000100000001 )
b1000100010001000100000001 Z
1[
b1 +"
b1000100010001000100000001 '"
1#"
1}
0/"
b0 y
1u
b1000100010001000100000001000000010001000100010001000000010000000000000000000100010001000100000000000000000000000000010000 &
b1000100010001000100000001000000010001000100010001000000010000000000000000000100010001000100000000000000000000000000010000 B
b1000100010001000100000001000000010001000100010001000000010000000000000000000100010001000100000000000000000000000000010000 F
b0 l
b100 d
b1000100010001000100000001000000000000000000010001000100010000000000000000000000000001000000010000000100010000000000000001 k
b0 i
1g
12
#75000
02
#80000
b0 `
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000000000000000001000100010001 &
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000000000000000001000100010001 B
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000000000000000001000100010001 F
12
#81000
b0 ."
b0 *"
0&"
1""
02"
b0 |
0x
b0 -"
b0 )"
0%"
1!"
01"
b0 {
0w
b0 ,"
b0 ("
0$"
1~
00"
b0 z
0v
b1000100010001 )
b1000100010001 Z
b1 +"
b1000100010001 '"
1#"
1}
0/"
b0 y
1u
b100 d
1[
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000 b
b10 J
b1010 .
b1010 E
#85000
02
#90000
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 &
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 B
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 F
12
#91000
b1 _
b0 f
b1 (
b1 5
b1 ]
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000 b
b0 ."
b0 *"
0&"
1""
02"
b0 |
0x
b0 -"
b0 )"
0%"
1!"
01"
b0 {
0w
b0 ,"
b0 ("
0$"
1~
00"
b0 z
0v
b0 +"
b0 '"
0#"
1}
0/"
b0 y
0u
b100 d
0[
b1 M
b1 J
b1 K
b10110 .
b10110 E
#95000
02
#100000
b1 A
1%
1*
b1 `
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 &
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 B
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 F
12
#105000
02
#110000
1'
b1 C
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 &
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 B
b1000100010001000100000001000000010001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 F
12
#111000
b0 D
#115000
02
#120000
b1 ?
b10001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 &
b10001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 B
b10001000100010001000000010000000100010001000100010000000100000001000100010001000100000001 F
12
#125000
02
#130000
b10 ?
b100010001000100010000000100000001000100010001000100000001 &
b100010001000100010000000100000001000100010001000100000001 B
b100010001000100010000000100000001000100010001000100000001 F
12
#131000
b10001 D
#135000
02
#140000
b11 A
b11 ?
b10001000000000000000000000000000000000000000000000000000000000000000000000001000100010001000100000001 &
b10001000000000000000000000000000000000000000000000000000000000000000000000001000100010001000100000001 B
b10001000000000000000000000000000000000000000000000000000000000000000000000001000100010001000100000001 F
12
#141000
b1 D
#145000
02
#150000
1Y
0%
b11 _
b0 A
1"
0'
b11 C
b0 ?
b1000000000000000000000000000100010000000000000000000000000000000000000000000000000000000000000000 &
b1000000000000000000000000000100010000000000000000000000000000000000000000000000000000000000000000 B
b1000000000000000000000000000100010000000000000000000000000000000000000000000000000000000000000000 F
12
#155000
02
#160000
0Y
0*
0"
b0 _
b0 C
b11 `
b1 f
b0 ."
b0 *"
0&"
1""
02"
b0 |
0x
b0 -"
b0 )"
0%"
1!"
01"
b0 {
0w
b0 ,"
b0 ("
0$"
1~
00"
b0 z
0v
b0 )
b0 Z
1[
b1 +"
b0 '"
1#"
1}
0/"
b0 y
1u
b1000000000000000000000000000000010000000000000000000000000001000100000000000000000000000000000000 &
b1000000000000000000000000000000010000000000000000000000000001000100000000000000000000000000000000 B
b1000000000000000000000000000000010000000000000000000000000001000100000000000000000000000000000000 F
b0 s
b100 d
b1000000000000000000000000000100010000000000000000000000000000000000000000000000000000000000000000 r
b0 p
1n
12
#165000
02
#170000
b0 `
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000010001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000010001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000010001 F
12
#171000
b0 ."
b0 *"
0&"
1""
02"
b0 |
0x
b0 -"
b0 )"
0%"
1!"
01"
b0 {
0w
b0 ,"
b0 ("
0$"
1~
00"
b0 z
0v
b1 )
b1 Z
b1 +"
b1 '"
1#"
1}
0/"
b0 y
1u
b100 d
1[
bx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 b
b11 J
0/
b11110 .
b11110 E
#175000
02
#180000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#181000
1a
b0 ."
b0 *"
0&"
1""
02"
b0 |
0x
b0 -"
b0 )"
0%"
1!"
01"
b0 {
0w
b0 ,"
b0 ("
0$"
1~
00"
b0 z
0v
b10001 )
b10001 Z
b1 +"
b10001 '"
1#"
1}
0/"
b0 y
1u
b100 d
1[
b110000000000000000000000000000000000000000000000000000000000000000 b
b10 J
10
b11 1
b11 G
b11010 .
b11010 E
#185000
02
#190000
b1 f
b0 ."
b0 *"
0&"
1""
02"
b0 |
0x
b0 -"
b0 )"
0%"
1!"
01"
b0 {
0w
b0 ,"
b0 ("
0$"
1~
00"
b0 z
0v
b0 )
b0 Z
b10 +"
b0 '"
1#"
1}
0/"
b0 y
1u
1[
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
b0 s
b100 d
b1 r
12
#191000
0a
00
#195000
02
#200000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#205000
02
#210000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#215000
02
#220000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#225000
02
#230000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#235000
02
#240000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#245000
02
#250000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#255000
02
#260000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#265000
02
#270000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#275000
02
#280000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#285000
02
#290000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#295000
02
#300000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#305000
02
#310000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#315000
02
#320000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#325000
02
#330000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#335000
02
#340000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 &
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 B
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 F
12
#341000
