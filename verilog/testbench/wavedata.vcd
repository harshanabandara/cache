$date
	Sat Dec 30 19:13:06 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testcache $end
$var wire 1 ! busywait $end
$var wire 32 " data [31:0] $end
$var parameter 32 # line_size $end
$var reg 32 $ address [31:0] $end
$var reg 1 % clk $end
$var reg 1 & reset $end
$scope module mycache $end
$var wire 32 ' address [31:0] $end
$var wire 1 ! busywait $end
$var wire 1 % clk $end
$var wire 1 & reset $end
$var wire 24 ( tag [23:0] $end
$var wire 2 ) offset [1:0] $end
$var wire 4 * index [3:0] $end
$var parameter 32 + assiotivity $end
$var parameter 32 , index_depth $end
$var parameter 32 - line_size $end
$var parameter 32 . offset_size $end
$var parameter 35 / tag_size $end
$var reg 32 0 data [31:0] $end
$scope begin valid_bit_assiotivity[0] $end
$var wire 1 1 valid_b $end
$var parameter 2 2 v_b $end
$upscope $end
$scope begin valid_bit_assiotivity[1] $end
$var wire 1 3 valid_b $end
$var parameter 2 4 v_b $end
$upscope $end
$scope begin valid_bit_assiotivity[2] $end
$var wire 1 5 valid_b $end
$var parameter 3 6 v_b $end
$upscope $end
$scope begin valid_bit_assiotivity[3] $end
$var wire 1 7 valid_b $end
$var parameter 3 8 v_b $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 8
b10 6
b1 4
b0 2
b11000 /
b10 .
b100000 -
b100 ,
b10 +
b100000 #
$end
#0
$dumpvars
x7
x5
x3
x1
bx 0
bx *
bx )
bx (
bx '
1&
1%
bx $
bx "
z!
$end
#1000
0&
#5000
0%
#10000
b11 )
b1001 *
b100000000000000000000001 (
b10000000000000000000000110011110 $
b10000000000000000000000110011110 '
1%
#15000
0%
#20000
b0 )
b0 *
b0 (
b10 $
b10 '
1%
#25000
0%
#30000
1&
1%
